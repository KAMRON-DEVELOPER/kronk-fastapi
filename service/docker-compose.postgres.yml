services:
  postgres:
    image: postgres:alpine
    # entrypoint: /postgres-entrypoint.sh
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    networks:
      - postgres_network
    # ports:
    #   - target: 5432
    #     published: 5432
    #     protocol: tcp
    #     mode: host
    secrets:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - ca.pem
      - pg_server_cert.pem
      - fastapi_client_cert.pem
      - source: fastapi_client_key.pem
        target: /var/lib/postgresql/certs/fastapi_client_key.pem
        mode: 0600
        uid: "70"
        gid: "70"
      - source: pg_server_key.pem
        target: /var/lib/postgresql/certs/pg_server_key.pem
        mode: 0600
        uid: "70"
        gid: "70"
    environment:
      - POSTGRES_DB_FILE=/run/secrets/POSTGRES_DB
      - POSTGRES_USER_FILE=/run/secrets/POSTGRES_USER
      - POSTGRES_PASSWORD_FILE=/run/secrets/POSTGRES_PASSWORD
    volumes:
      # - ./postgres-entrypoint.sh:/postgres-entrypoint.sh
      - ./configurations/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./configurations/postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./volumes/postgres_storage:/var/lib/postgresql/data
    # healthcheck:
    #   test:
    #     [
    #       "CMD-SHELL",
    #       'pg_isready -U "$$(cat /run/secrets/POSTGRES_USER)" -d "$$(cat /run/secrets/POSTGRES_DB)"',
    #     ]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 3
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          [
            node.role == manager,
          ]
      restart_policy:
        condition: on-failure

volumes:
  postgres_storage:
    name: postgres_storage_volume

secrets:
  POSTGRES_DB:
    external: true
  POSTGRES_USER:
    external: true
  POSTGRES_PASSWORD:
    external: true
  ca.pem:
    external: true
  pg_server_cert.pem:
    external: true
  pg_server_key.pem:
    external: true
  fastapi_client_cert.pem:
    external: true
  fastapi_client_key.pem:
    external: true

networks:
  postgres_network:
    attachable: true
    name: postgres_default
