services:
  fastapi:
    image: kamronbekdev/kronk-production:1.0.0
    command:
      [
        "uv",
        "run",
        "uvicorn",
        "main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
      ]
    ports:
      - mode: ingress
        target: 8000
        published: 8000
    networks:
      - traefik-network
    secrets:
      - CA
      - FASTAPI_CLIENT_CERT
      - FASTAPI_CLIENT_KEY
      - DATABASE_URL
      - REDIS_HOST
      - FIREBASE_ADMINSDK
      - S3_ACCESS_KEY_ID
      - S3_SECRET_KEY
      - S3_ENDPOINT
      - S3_REGION
      - S3_BUCKET_NAME
      - SECRET_KEY
      - EMAIL_SERVICE_API_KEY
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: "1"
          memory: 3G
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        order: stop-first
        parallelism: 1
      labels:
        - "prometheus-job=fastapi"

        - "traefik.enable=true"

        # Mandatory by swarm
        - "traefik.http.services.fastapi_service.loadbalancer.server.port=8000"

        # HTTP Router (Redirects to HTTPS)
        - "traefik.http.routers.fastapi_http.rule=Host(`api.kronk.uz`)"
        - "traefik.http.routers.fastapi_http.entrypoints=http"
        - "traefik.http.routers.fastapi_http.middlewares=fastapi_middleware"

        # HTTPS Router
        - "traefik.http.routers.fastapi_https.rule=Host(`api.kronk.uz`)"
        - "traefik.http.routers.fastapi_https.entrypoints=https"
        - "traefik.http.routers.fastapi_https.tls=true"
        - "traefik.http.routers.fastapi_https.tls.certresolver=leresolver"

        # Middleware
        - "traefik.http.middlewares.fastapi_middleware.redirectscheme.scheme=https"
        - "traefik.http.middlewares.fastapi_middleware.redirectscheme.permanent=true"

  taskiq_worker:
    image: kamronbekdev/kronk-production:1.0.0
    command:
      [
        "uv",
        "run",
        "taskiq",
        "worker",
        "settings.my_taskiq:broker",
      ]
    secrets:
      - CA
      - FASTAPI_CLIENT_CERT
      - FASTAPI_CLIENT_KEY
      - DATABASE_URL
      - REDIS_HOST
      - FIREBASE_ADMINSDK
      - S3_ACCESS_KEY_ID
      - S3_SECRET_KEY
      - S3_ENDPOINT
      - S3_REGION
      - S3_BUCKET_NAME
      - SECRET_KEY
      - EMAIL_SERVICE_API_KEY
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        order: stop-first
        parallelism: 1

  taskiq_scheduler:
    image: kamronbekdev/kronk-production:1.0.0
    command:
      [
        "uv",
        "run",
        "taskiq",
        "scheduler",
        "settings.my_taskiq:scheduler",
      ]
    networks:
      - traefik-network
    secrets:
      - CA
      - FASTAPI_CLIENT_CERT
      - FASTAPI_CLIENT_KEY
      - DATABASE_URL
      - REDIS_HOST
      - FIREBASE_ADMINSDK
      - S3_ACCESS_KEY_ID
      - S3_SECRET_KEY
      - S3_ENDPOINT
      - S3_REGION
      - S3_BUCKET_NAME
      - SECRET_KEY
      - EMAIL_SERVICE_API_KEY
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        order: stop-first
        parallelism: 1

networks:
  traefik-network:
    external: true
    driver: overlay

secrets:
  DATABASE_URL:
    external: true

  REDIS_URL:
    external: true
  TASKIQ_WORKER_URL:
    external: true
  TASKIQ_RESULT_BACKEND_URL:
    external: true
  TASKIQ_REDIS_SCHEDULE_SOURCE_URL:
    external: true

  SECRET_KEY:
    external: true
  REFRESH_TOKEN_EXPIRE_TIME:
    external: true
  ACCESS_TOKEN_EXPIRE_TIME:
    external: true
  ALGORITHM:
    external: true

  MINIO_BUCKET_NAME:
    external: true
  MINIO_ENDPOINT:
    external: true
  MINIO_ROOT_PASSWORD:
    external: true
  MINIO_ROOT_USER:
    external: true

  EMAIL_SERVICE_API_KEY:
    external: true

  FIREBASE_ADMINSDK_PROD:
    external: true
